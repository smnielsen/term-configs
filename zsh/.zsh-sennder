########################################
## SENNDER CONFIGURATIONS
########################################
SENNDER_AWS_PROFILE="${SENNDER_AWS_PROFILE:-sennder-spectator}"
SENNDER_ECR="557594345551.dkr.ecr.eu-central-1.amazonaws.com"
# export SENNDER_ECR_ECS="075050162388.dkr.ecr.eu-central-1.amazonaws.com"
SENNDER_AWS_START="https://sennder-ng.awsapps.com/start/"
DOCKER_IMAGE_PYTHON="${SENNDER_ECR}/platform/docker-base-images/python-3.8-datadog:latest"

### Aliases to be used in the script and later if wanted
alias sennder-aws-open="open ${SENNDER_AWS_START}"
alias sennder-aws-docker-login="aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${SENNDER_ECR}"
alias sennder-aws-sso-login="aws sso login --profile ${SENNDER_AWS_PROFILE}"

########################################
## SENNDER AWS LOGIN, SETUP & CACHING
########################################
_download_docker() {
  local DOCKER_IMAGE=$1
  echo "   | => Validating AWS credentials... "
  PULLED=$(docker pull $DOCKER_IMAGE)
  if [[ $PULLED == *"Status: Downloaded newer image"* ]] || [[ $PULLED == *"Status: Image is up to date"* ]]; then
    echo "   | ✅ ECR enabled"
  else
    echo "   | ⚠️  Not authenticated, fetch credentials...  ⚠️"
    echo "   ...Please follow steps:"
    echo "   1. Fetch latest credentials from ${SENNDER_AWS_START}"
    echo "   2. Update in ~/.aws/credentials with exact details from EKS_Developer"
    echo "   3. Re-run $ sennder-aws"
    sennder-aws-open
    nano ~/.aws/credentials
  fi
}

sennder-aws() {
  echo "-- Login and Cache docker for Spectator Profile --"
  echo "   | Using profile: $SENNDER_AWS_PROFILE"
  # Default the AWS profile after login
  export AWS_PROFILE=${SENNDER_AWS_PROFILE}
  sennder-aws-sso-login

  echo -n "   | => Docker login"
  sennder-aws-docker-login
  echo "   | => Caching docker image for latest python"
  _download_docker ${DOCKER_IMAGE_PYTHON}

  echo "   | Successfully cached docker-images and logged in to sennder AWS SSO"
}